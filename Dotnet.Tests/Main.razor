@using Blazored.LocalStorage
<Router AppAssembly="@typeof(Main).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    [Inject]
    public IServiceProvider ServiceProvider { get; set; }
    [Inject]
    public ILocalStorageService localStorage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!StateBaseExtensions.HandleProblems && !StateBaseExtensions.IsFreezeException)
        {
            var context = ServiceProvider.GetRequiredService<StateManager>();
        }
        else if (StateBaseExtensions.HandleProblems)
        {
            await new StateManager().Initialize(localStorage);
        }
        else if (StateBaseExtensions.IsFreezeException)
        {
            var user = localStorage.GetItemAsStringAsync("User").Result;
        }
    }
}